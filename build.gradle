apply plugin: 'de.gliderpilot.semantic-release'
apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'

apply from: 'gradle/credentials.gradle'
apply from: 'gradle/compile.gradle'
apply from: 'gradle/publishing.gradle'
apply from: 'gradle/publish-plugin.gradle'
apply from: 'gradle/bintray.gradle'
apply from: 'gradle/artifactory.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/code-coverage.gradle'

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.2'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.3.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.5"
    }
}

apply from: 'compile-dependencies.gradle'

dependencies {
    testCompile 'com.netflix.nebula:nebula-test:2.2.2', {
        exclude module: 'groovy-all'
    }
}

// workaround for tests to run (see http://stackoverflow.com/questions/29377544/my-gradle-project-depends-on-commons-io-2-4-but-gradle-puts-gradle-home-common)
sourceSets {
    test {
        runtimeClasspath -= files("$gradle.gradleHomeDir/lib/commons-io-1.4.jar")
    }
}

group = 'de.gliderpilot.gradle.semantic-release'

semanticRelease {
    changeLog.ghToken = project.ext.ghToken
}

task integTest {
    dependsOn test
}

tasks.release {
    dependsOn build
    finalizedBy publishPlugins, bintrayUpload, artifactoryPublish
}

test {
    if (gradle.startParameter.taskNames.find { ['integTest', 'release'].contains(it) })
        systemProperty 'integTest', 'true'
    maxHeapSize = '512m'
    jvmArgs '-XX:MaxPermSize=256m'
}
