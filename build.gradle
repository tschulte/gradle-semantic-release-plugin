apply plugin: 'de.gliderpilot.semantic-release'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'com.github.ben-manes.versions'

apply from: 'gradle/credentials.gradle'
apply from: 'gradle/compile.gradle'
apply from: 'gradle/publishing.gradle'
apply from: 'gradle/publish-plugin.gradle'
apply from: 'gradle/bintray.gradle'
apply from: 'gradle/artifactory.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/code-coverage.gradle'

sourceCompatibility = 8
targetCompatibility = 8

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.21.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.38.0'
        classpath "com.gradle.publish:plugin-publish-plugin:0.14.0"
        classpath "gradle.plugin.de.gliderpilot.gradle.semantic-release:gradle-semantic-release-plugin:1.+"
    }
}

repositories {
    jcenter()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    compile "org.ajoberstar:gradle-git:1.7.2"
    compile "com.github.zafarkhaja:java-semver:0.9.0"
    compile "org.ajoberstar:grgit:1.9.3"
    compile "com.sun.jersey:jersey-core:1.18.1"
    compile "com.jcabi:jcabi-github:0.28"
    testCompile 'com.netflix.nebula:nebula-test:8.1.0'
    testCompile 'org.apache.commons:commons-exec:1.3'
}

group = 'de.gliderpilot.gradle.semantic-release'

semanticRelease {
    repo.ghToken = project.ext.ghToken
}

task integTest {
    dependsOn test
}

test {
    outputs.dir new File(buildDir, 'nebulatest')
    outputs.dir new File(buildDir, 'test')
    dependsOn cleanTest
    if (gradle.startParameter.taskNames.find { ['integTest', 'release'].contains(it) })
        systemProperty 'integTest', 'true'
    maxHeapSize = '512m'
}

if (!version.toString().endsWith('-SNAPSHOT'))
    publish.dependsOn publishPlugins, bintrayUpload
else if ((System.getenv('TRAVIS_PULL_REQUEST') ?: "false") == "false")
    publish.dependsOn artifactoryPublish

